var Repository=PrototypeClass.extend({objects:{},register:function(name,object){this.objects[name]=object;},get:function(name){return this.objects[name];},prototype:{getAll:undefined,get:undefined,post:undefined,put:undefined,delete:undefined,factory:function(args){var method=args.method;var data=args.data;var success=args.success;var error=args.error;var obj=this;if(typeof method==="undefined"){method="get";}if(typeof data==="undefined"){data={};}return obj[method]({data:data,success:success,error:error});}}});var View=PrototypeClass.extend({prototype:{initialize:function(data){this.data=data;},method:"get",data:{},before:undefined,success:undefined,error:undefined,finally:undefined,repository:undefined,render:function(){var obj=this;var before_result=true;if(typeof obj.before!=="undefined"){before_result=obj.before();}if(before_result===true){if(typeof obj.repository!=="undefined"){obj.repository.factory(obj);}}if(typeof obj.finally!=="undefined"){obj.finally();}}}});var Views=PrototypeClass.extend({objects:{},register:function(name,object){this.objects[name]=object;},get:function(name){return this.objects[name];},prototype:{initialize:function(args){args=args||{};if(typeof args!=="undefined"&&typeof args.repository!=="undefined"){this.repository=args.repository;}if(typeof args!=="undefined"&&typeof args.template_path!=="undefined"){this.template_path=args.template_path;}},repository:undefined,template_path:undefined,render_template:function(template_name,data){var url=this.template_path+template_name+".mustache",template;$.ajax({url:url,async:false,success:function(data){template=data;}});return Mustache.render(template,data);},render:function(view_name,args){if(args===null||typeof args==="undefined"){args={};}var container=this;var repository=container.repository;var view_class=container[view_name];var obj=view_class.create(args);obj.repository=repository;obj.render();}}});
